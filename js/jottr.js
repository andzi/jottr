// Generated by CoffeeScript 1.4.0
(function() {
  var createNote, deleteNote, getNoteList, loadNote, resizeSource, saveNote, updateHTML, updateSource, with_notelist_do,
    __hasProp = {}.hasOwnProperty;

  resizeSource = function() {
    $('#source').width($('#html').width());
    if ($('#source').height() < $('#html').height()) {
      return $('#source').height($('#html').height());
    }
  };

  updateHTML = function() {
    var converter;
    converter = new Showdown.converter();
    return $('#html').html(converter.makeHtml($('#source').val()));
  };

  updateSource = function() {
    resizeSource();
    return $('#source').val(HTML2Markdown($('#html').html()));
  };

  with_notelist_do = function(callback) {
    var notelist;
    notelist = JSON.parse(localStorage.getItem("notes"));
    if (!(notelist != null)) {
      notelist = {};
    }
    callback(notelist);
    localStorage.setItem("notes", JSON.stringify(notelist));
    return getNoteList();
  };

  createNote = function(noteName) {
    noteName = noteName.replace(/\s/g, "_");
    if (!noteName) {
      return;
    }
    with_notelist_do(function(notes) {
      return notes[noteName] = {
        "html": "<h2>Edit Me!</h2>",
        "md": "## Edit Me!"
      };
    });
    return $('#newNoteName').val("");
  };

  loadNote = function(notename) {
    return with_notelist_do(function(notes) {
      var note;
      if (notes[notename]) {
        note = notes[notename];
        $('#html').html(note.html);
        $('#source').val(note.md);
        return window.currentNote = notename;
      } else {
        createNote(notename);
        return loadNote(notename);
      }
    });
  };

  saveNote = function(noteName) {
    noteName = noteName.replace(/\s/g, "_");
    return with_notelist_do(function(notelist) {
      return notelist[noteName] = {
        html: $('#html').html(),
        md: $('#source').val()
      };
    });
  };

  deleteNote = function(notename) {
    if (!notename) {
      return;
    }
    return with_notelist_do(function(notes) {
      return delete notes[notename];
    });
  };

  getNoteList = function() {
    var delBtn, li, name, notes, _results;
    notes = JSON.parse(localStorage.getItem("notes"));
    $('#noteList').empty();
    _results = [];
    for (name in notes) {
      if (!__hasProp.call(notes, name)) continue;
      li = document.createElement('li');
      $(li).prop('id', name).text(name + " ").appendTo($('#noteList'));
      delBtn = document.createElement('button');
      $(delBtn).prop('id', "delete-" + name).addClass("typicons-backspace").appendTo($(li));
      $(li).click(function() {
        return loadNote($(this).prop('id'));
      });
      _results.push($(delBtn).click(function() {
        return deleteNote($(this).prop('id').replace(/^delete-/, ""));
      }));
    }
    return _results;
  };

  $(document).ready(function() {
    getNoteList();
    loadNote('default');
    $('#switchButton').toggle(function() {
      updateSource();
      $('#html').fadeOut('fast', function() {
        return $('#source').fadeIn('fast');
      });
      return $(this).text("Switch to HTML");
    }, function() {
      $('#source').fadeOut('fast', function() {
        updateHTML();
        return $('#html').fadeIn('fast');
      });
      return $(this).text("Switch to Markdown");
    });
    $('#source').blur(function() {
      updateHTML();
      return saveNote(window.currentNote);
    });
    $('#html').blur(function() {
      updateSource();
      return saveNote(window.currentNote);
    });
    return $('#newNoteBtn').click(function() {
      return createNote($('#newNoteName').val());
    });
  });

  Aloha.settings.sidebar = {
    disabled: true
  };

  Aloha.ready(function() {
    Aloha.jQuery('#html').aloha();
    return null;
  });

}).call(this);
