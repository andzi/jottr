// Generated by CoffeeScript 1.4.0
(function() {
  var createNote, deleteNote, getNoteList, loadNote, resizeSource, saveNote, updateHTML, updateSource,
    __hasProp = {}.hasOwnProperty;

  resizeSource = function() {
    $('#source').width($('#html').width());
    if ($('#source').height() < $('#html').height()) {
      return $('#source').height($('#html').height());
    }
  };

  updateHTML = function() {
    var converter;
    converter = new Showdown.converter();
    return $('#html').html(converter.makeHtml($('#source').val()));
  };

  updateSource = function() {
    resizeSource();
    return $('#source').val(HTML2Markdown($('#html').html()));
  };

  saveNote = function(noteName) {
    var notelist;
    notelist = JSON.parse(localStorage.getItem("notes"));
    if (!(notelist != null)) {
      notelist = {};
    }
    notelist[noteName] = {
      html: $('#html').html(),
      md: $('#source').val()
    };
    localStorage.setItem("notes", JSON.stringify(notelist));
    return getNoteList();
  };

  loadNote = function(notename) {
    var note, notes;
    notes = JSON.parse(localStorage.getItem("notes"));
    if ((notes != null) && (notes[notename] != null)) {
      note = notes[notename];
      $('#html').html(note.html);
      $('#source').val(note.md);
      window.currentNote = notename;
    } else {
      saveNote(notename);
      loadNote(notename);
    }
    $("#noteList li").removeClass('active');
    return $("#noteList #" + notename).addClass('active');
  };

  createNote = function(notename) {
    var notes;
    if (!notename) {
      return;
    }
    notes = JSON.parse(localStorage.getItem("notes"));
    if (!notes) {
      notes = {};
    }
    notes[notename] = {
      "html": "",
      "md": ""
    };
    localStorage.setItem("notes", JSON.stringify(notes));
    return getNoteList();
  };

  deleteNote = function(notename) {
    var notes;
    if (!notename) {
      return;
    }
    notes = JSON.parse(localStorage.getItem("notes"));
    if (!notes) {
      return;
    }
    delete notes[notename];
    localStorage.setItem('notes', JSON.stringify(notes));
    return getNoteList();
  };

  getNoteList = function() {
    var delBtn, li, name, notes, _results;
    notes = JSON.parse(localStorage.getItem("notes"));
    console.log(notes);
    $('#noteList').empty();
    _results = [];
    for (name in notes) {
      if (!__hasProp.call(notes, name)) continue;
      li = document.createElement('li');
      $(li).prop('id', name).text(name + " ");
      delBtn = document.createElement('button');
      $(delBtn).prop('id', "delete-" + name).text("X").appendTo($(li));
      $(li).appendTo($('#noteList'));
      $(li).click(function() {
        return loadNote($(this).prop('id'));
      });
      _results.push($(delBtn).click(function() {
        return deleteNote($(this).prop('id').replace(/^delete-/, ""));
      }));
    }
    return _results;
  };

  $(document).ready(function() {
    getNoteList();
    loadNote('default');
    $('#switchButton').toggle(function() {
      updateSource();
      return $('#html').fadeOut('fast', function() {
        return $('#source').fadeIn('fast');
      });
    }, function() {
      return $('#source').fadeOut('fast', function() {
        updateHTML();
        return $('#html').fadeIn('fast');
      });
    });
    $('#source').blur(function() {
      updateHTML();
      return saveNote(window.currentNote);
    });
    $('#html').blur(function() {
      updateSource();
      return saveNote(window.currentNote);
    });
    return $('#newNoteBtn').click(function() {
      return createNote($('#newNoteName').val());
    });
  });

  Aloha.settings.sidebar = {
    disabled: true
  };

  Aloha.ready(function() {
    Aloha.jQuery('#html').aloha();
    return null;
  });

}).call(this);
